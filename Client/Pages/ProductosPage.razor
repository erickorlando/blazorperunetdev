@page "/productos"
@using System.Net.Http.Headers
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@inject SweetAlertService Swal
@inject IToastService ToastService

<PageTitle>Productos</PageTitle>

<h3>Productos</h3>

<NavLink class="btn btn-success" href="productos/crear"><i class="bi bi-patch-plus me-1"></i>Agregar</NavLink>

<div class="row mb-5 mt-4 justify-content-start w-50 align-items-baseline">
    <div class="col-1">
        <label class="form-label" for="filtro">Nombre:</label>
    </div>
    <div class="col-8">
        <div class="input-group">
            <input type="text" class="form-control" @bind-value="Filtro" id="filtro"/>
            <span class="input-group-text" style="cursor: pointer" @onclick="() => Filtro = string.Empty" ><i class="bi bi-x"></i></span>
        </div>
    </div>
    <div class="col-sm">
        <button type="button" class="btn btn-outline-primary" @onclick="Cargar"><i class="bi bi-search"></i></button>
    </div>
</div>

@if (Lista is null)
{
    <p class="alert alert-info">No hay datos para mostrar</p>
}
else if (!Lista.Any())
{
    <p class="alert alert-danger">La tabla esta vacía</p>
}
else
{
    <table class="table table-bordered table-hover mt-4">
        <thead>
        <tr class="table-primary">
            <th>Id</th>
            <th>Nombre</th>
            <th>Precio Unitario</th>
            <th>Marca</th>
            <th>Categoria</th>
            <th>Acciones</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in Lista)
        {
            <tr>
                <td>@item.Id</td>
                <td>@item.Nombre</td>
                <td>@item.PrecioUnitario</td>
                <td>@item.Marca</td>
                <td>@item.Categoria</td>
                <td>
                    <button class="btn btn-secondary" @onclick="() => Editar(item.Id)"><i class="bi bi-pencil"></i></button>
                    <button class="btn btn-danger" @onclick="() => Eliminar(item.Id)"><i class="bi bi-trash3-fill"></i></button>
                </td>
            </tr>
        }
        </tbody>
    </table>

    <LoadingComponent IsLoading="Cargando" />
}

@code {

    public ICollection<ProductoDto>? Lista { get; set; }

    public string? Filtro { get; set; }

    public bool Cargando { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await Cargar();
    }

    private async Task Cargar()
    {
        Cargando = true;
        try
        {
            var response = await HttpClient.GetFromJsonAsync<ICollection<ProductoDto>>($"api/Productos?filtro={Filtro}");
            if (response != null)
            {
                Lista = response;
            }
        }
        catch (Exception ex)
        {
            ToastService.ShowError(ex.Message);
        }
        finally
        {
            Cargando = false;
        }
    }

    private void Editar(int id)
    {
        NavigationManager.NavigateTo($"/productos/editar/{id}");
    }

    private async Task Eliminar(int id)
    {
        var result = await Swal.FireAsync(new SweetAlertOptions("Desea eliminar el registro?")
            {
                Title = "Eliminar",
                Icon = SweetAlertIcon.Question,
                ShowCancelButton = true
            });

        if (result.IsConfirmed)
        {
            await HttpClient.DeleteAsync($"api/productos/{id}");
            await Cargar();
        }
    }
}